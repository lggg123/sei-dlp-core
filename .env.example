# SEI DLP Core - Environment Variables Configuration
# Copy this file to .env and fill in your actual values
# This file contains all environment variables needed to run the SEI DLP Core application

# ============================================================================
# REQUIRED CONFIGURATION
# ============================================================================

# ─── SEI Network Configuration ─────────────────────────────────────────────
# SEI testnet RPC endpoint
SEI_RPC_URL=https://evm-rpc-testnet.sei-apis.com

# SEI testnet chain ID
SEI_CHAIN_ID=1328

# Your SEI wallet private key (64 characters without 0x prefix)
# WARNING: Keep this secret and never commit to version control
SEI_PRIVATE_KEY=your_sei_private_key_here

# Your SEI wallet address (derived from private key)
SEI_ADDRESS=your_sei_wallet_address_here

# SEI network identifier
SEI_NETWORK=sei-testnet

# ─── Smart Contract Addresses ──────────────────────────────────────────────
# Main vault addresses (deployed on SEI Atlantic-2 testnet)
NEXT_PUBLIC_NATIVE_SEI_VAULT=0xAC64527866CCfA796Fa87A257B3f927179a895e6
NEXT_PUBLIC_ERC20_USDC_VAULT=0xcF796aEDcC293db74829e77df7c26F482c9dBEC0
NEXT_PUBLIC_AI_ORACLE=0x4199f86F3Bd73cF6ae5E89C8E28863d4B12fb18E
NEXT_PUBLIC_VAULT_FACTORY=0x37b8E91705bc42d5489Dae84b00B87356342B267

# Legacy vault address (for backwards compatibility)
NEXT_PUBLIC_VAULT_ADDRESS=0xf6A791e4773A60083AA29aaCCDc3bA5E900974fE

# ─── Token Addresses (SEI Atlantic-2 testnet) ──────────────────────────────
# Native SEI token (zero address)
NEXT_PUBLIC_TOKEN_SEI=0x0000000000000000000000000000000000000000

# Testnet token addresses
NEXT_PUBLIC_TOKEN_USDC=0x647Dc1B1BFb17171326c12A2dcd8464E871F097B
NEXT_PUBLIC_TOKEN_USDT=0x13f991ac97ef04cc0288a96a82aa808fb1966574
NEXT_PUBLIC_TOKEN_ETH=0x80641cae989b52868e924115a7ffc2d231033555
NEXT_PUBLIC_TOKEN_BTC=0x84b2440238dc8c938d0d1e88d8b973a43a86c450

# ============================================================================
# AI/ML CONFIGURATION (ElizaOS Integration)
# ============================================================================

# ─── AI Model Provider Keys ────────────────────────────────────────────────
# At least one model provider key is required for AI features

# OpenAI Configuration (recommended for production)
OPENAI_API_KEY=your_openai_api_key_here

# Anthropic Configuration (Claude models)
ANTHROPIC_API_KEY=your_anthropic_api_key_here

# Google Generative AI (for embeddings)
GOOGLE_GENERATIVE_AI_API_KEY=your_google_ai_api_key_here

# ─── Python AI Engine ──────────────────────────────────────────────────────
# Enable Python-based AI analytics engine
PYTHON_AI_ENGINE_ACTIVE=true

# ─── API Integration Settings ──────────────────────────────────────────────
# Enable integration between ElizaOS and main project APIs
ENABLE_API_INTEGRATION=true
YIELD_DELTA_USE_EXISTING_APIS=true
MAIN_PROJECT_API=http://localhost:3001
ELIZA_AGENT_URL=http://localhost:3000

# ============================================================================
# DATABASE CONFIGURATION
# ============================================================================

# ─── Local Database (PGLite) ───────────────────────────────────────────────
# Local database directory for PGLite (default option)
PGLITE_DATA_DIR=./.eliza/.elizadb

# ─── PostgreSQL Database (Optional) ────────────────────────────────────────
# If provided, will use PostgreSQL instead of local PGLite
POSTGRES_URL=postgresql://username:password@localhost:5432/sei_dlp_core

# ─── Supabase Database (Production) ────────────────────────────────────────
# For production deployment with Supabase
SUPABASE_URL=your_supabase_project_url
SUPABASE_ANON_KEY=your_supabase_anon_key
SUPABASE_SERVICE_ROLE_KEY=your_supabase_service_role_key

# ============================================================================
# EXTERNAL API INTEGRATIONS
# ============================================================================

# ─── DragonSwap DEX Integration ────────────────────────────────────────────
# DragonSwap API for SEI ecosystem trading
DRAGONSWAP_API_URL=https://api-testnet.dragonswap.app/v1

# ─── Oracle Services ───────────────────────────────────────────────────────
# Price feed and market data oracles
ORACLE_API_KEY=your_oracle_api_key_here
YEI_API_KEY=your_yei_api_key_here

# ─── Coinbase Advanced Trading (US Users) ──────────────────────────────────
# For US users who want to use Coinbase Advanced trading features
COINBASE_ADVANCED_API_KEY=your_coinbase_api_key
COINBASE_ADVANCED_SECRET=your_coinbase_secret
COINBASE_ADVANCED_PASSPHRASE=your_coinbase_passphrase
COINBASE_SANDBOX=true

# ============================================================================
# TRADING & GEOGRAPHY SETTINGS
# ============================================================================

# ─── User Geography & Trading Preferences ──────────────────────────────────
# Geographic region for compliance and optimal routing
# Options: US | EU | ASIA | GLOBAL
USER_GEOGRAPHY=GLOBAL

# Perpetual trading preference
# Options: COINBASE | ON_CHAIN | GEOGRAPHIC | AUTO
PERP_PREFERENCE=AUTO

# ─── Perpetual Protocol Settings ───────────────────────────────────────────
# Default perpetual protocol to use
PERP_PROTOCOL=vortex

# Vortex protocol contract addresses
VORTEX_TESTNET_CONTRACT=0x1234567890123456789012345678901234567890
VORTEX_MAINNET_CONTRACT=0x9876543210987654321098765432109876543210

# ============================================================================
# LOGGING & MONITORING
# ============================================================================

# ─── Application Logging ───────────────────────────────────────────────────
# Log level: fatal | error | warn | info | debug | trace
# Default: info
LOG_LEVEL=info

# ─── Sentry Error Monitoring ───────────────────────────────────────────────
# Enable Sentry for error tracking and monitoring
SENTRY_LOGGING=false
SENTRY_DSN=your_sentry_dsn_here
SENTRY_ENVIRONMENT=development
SENTRY_TRACES_SAMPLE_RATE=0.1
SENTRY_SEND_DEFAULT_PII=false

# ============================================================================
# DEVELOPMENT SETTINGS
# ============================================================================

# ─── Next.js Configuration ─────────────────────────────────────────────────
# Application mode
NODE_ENV=development

# Demo mode for testing (enables mock data)
NEXT_PUBLIC_DEMO_MODE=true

# API base URL (adjust for your deployment)
NEXT_PUBLIC_API_URL=http://localhost:3000

# ─── Advanced Model Configuration (Optional) ───────────────────────────────
# Override default models if needed
# OPENAI_SMALL_MODEL=gpt-4o-mini
# OPENAI_LARGE_MODEL=gpt-4o
# OPENAI_EMBEDDING_MODEL=text-embedding-3-small
# ANTHROPIC_SMALL_MODEL=claude-3-5-haiku-latest
# ANTHROPIC_LARGE_MODEL=claude-3-5-sonnet-latest

# ─── Ollama Local Models (Optional) ─────────────────────────────────────────
# For running local AI models with Ollama
# OLLAMA_API_ENDPOINT=http://localhost:11434/api
# OLLAMA_SMALL_MODEL=gemma3:latest
# OLLAMA_MEDIUM_MODEL=gemma3:latest
# OLLAMA_LARGE_MODEL=gemma3:latest
# OLLAMA_EMBEDDING_MODEL=nomic-embed-text

# ============================================================================
# SETUP INSTRUCTIONS
# ============================================================================
#
# 1. REQUIRED SETUP:
#    - Get SEI testnet tokens from: https://faucet.sei-apis.com/
#    - Create a SEI wallet and fund it with testnet tokens
#    - Get an AI model provider API key (OpenAI, Anthropic, or Google)
#
# 2. OPTIONAL SETUP:
#    - Set up Supabase for production database
#    - Configure Sentry for error monitoring
#    - Set up Coinbase Advanced for US trading
#
# 3. SECURITY NOTES:
#    - Never commit this file with real values to version control
#    - Keep your private keys and API keys secure
#    - Use environment-specific values for different deployments
#
# 4. FOR DEVELOPMENT:
#    - Use testnet values for all blockchain interactions
#    - Set NEXT_PUBLIC_DEMO_MODE=true for testing
#    - Use local database (PGLite) for development
#
# 5. FOR PRODUCTION:
#    - Use mainnet contract addresses (when available)
#    - Set up proper database (PostgreSQL/Supabase)
#    - Configure Sentry monitoring
#    - Use production API keys
#
# ============================================================================
